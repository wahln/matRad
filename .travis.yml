language: cpp
group: travis_latest

os:
  - linux
  - osx
  - windows
  
matrix:
  allow_failures:
    - os: windows
    - os: osx

# manual octave installation since this installs octave 3.8    
# addons:
#   apt:
#     packages:
#       - octave
      
before_install:
  - cd wahln
  - cd matRad
  # Linux setup
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo "Testing matRad on linux..." ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo chmod +x before_install_linux.sh ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ./before_install_linux.sh; fi
  
  # OSX setup
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "Testing matRad on Mac OSX..." ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install octave > /dev/null ; fi
  
  # Windows Setup
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then echo "Testing matRad on Windows..." ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then choco install octave.portable ; fi  
  
before_script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ulimit -c unlimited -S ; fi
  
  
after_failure:
  ## Linux stack trace
  # find core file
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1) ; fi 
  # print stack trace
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then gdb -c "$COREFILE" -ex "thread apply all bt" -ex "set pagination 0" -batch /usr/bin/octave-cli ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tail runtests.log ; fi
  
script:
  - travis_wait 45 ./runtests.sh octave-cli

#notifications:
#    slack: e0404:u5tBXbO6D1mEwzJuFZV0MmqJ
